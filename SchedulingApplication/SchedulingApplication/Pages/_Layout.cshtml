@using Microsoft.AspNetCore.Components.Web
@namespace SchedulingApplication.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.bootcdn.net/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <link href="css/site.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <style>
        /* 确保菜单始终可见 */
        .sidebar {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
        }
        
        /* 确保菜单项清晰可见 */
        .sidebar .nav-item {
            display: block !important;
            visibility: visible !important;
        }
        
        /* 所有屏幕宽度下强制显示 */
        .collapse, .nav-scrollable {
            display: block !important;
        }
    </style>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        发生了一个错误。
        <a href="" class="reload">重新加载</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.1/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // 处理Blazor连接问题
        window.addEventListener('load', function() {
            let lastUrl = window.location.href;
            
            // 监听URL变化
            setInterval(function() {
                if (lastUrl !== window.location.href) {
                    console.log('URL变化检测:', lastUrl, '->', window.location.href);
                    lastUrl = window.location.href;
                    
                    // 延迟触发刷新，确保状态已更新
                    setTimeout(function() {
                        try {
                            console.log('尝试触发Blazor组件刷新');
                            window.localStorage.setItem('__forceUpdate', Date.now().toString());
                            
                            // 强制显示侧边栏
                            const sidebar = document.querySelector('.sidebar');
                            if (sidebar) {
                                sidebar.style.display = 'block';
                                sidebar.style.visibility = 'visible';
                                sidebar.style.opacity = '1';
                                console.log('强制显示侧边栏');
                            }
                            
                            // 在Blazor的上下文中执行刷新
                            if (window.DotNet && typeof window.DotNet.invokeMethodAsync === 'function') {
                                try {
                                    window.DotNet.invokeMethodAsync('SchedulingApplication', 'ForceStateUpdate');
                                    console.log('已调用ForceStateUpdate');
                                } catch (e) {
                                    console.log('ForceStateUpdate调用失败:', e);
                                }
                            }
                        } catch (e) {
                            console.error('刷新组件失败:', e);
                        }
                    }, 200);
                }
            }, 300);
            
            // 处理连接断开
            window.addEventListener('offline', function() {
                document.getElementById('blazor-error-ui').style.display = 'block';
            });
            
            // 处理重新连接
            window.addEventListener('online', function() {
                document.getElementById('blazor-error-ui').style.display = 'none';
                setTimeout(function() { 
                    window.location.reload();
                }, 1000);
            });
            
            // 确保菜单总是可见
            function ensureSidebarIsVisible() {
                const sidebar = document.querySelector('.sidebar');
                if (sidebar) {
                    sidebar.style.display = 'block';
                    sidebar.style.visibility = 'visible';
                    sidebar.style.opacity = '1';
                    
                    // 所有菜单项
                    const navItems = sidebar.querySelectorAll('.nav-item');
                    navItems.forEach(item => {
                        item.style.display = 'block';
                        item.style.visibility = 'visible';
                    });
                    
                    // 展开菜单
                    const collapsibleMenu = sidebar.querySelector('.collapse');
                    if (collapsibleMenu) {
                        collapsibleMenu.classList.remove('collapse');
                        collapsibleMenu.style.display = 'block';
                    }
                }
            }
            
            // 定期检查并确保菜单可见
            setInterval(ensureSidebarIsVisible, 1000);
            
            // 在加载完成后立即执行一次
            setTimeout(ensureSidebarIsVisible, 500);
        });
    </script>
</body>
</html> 