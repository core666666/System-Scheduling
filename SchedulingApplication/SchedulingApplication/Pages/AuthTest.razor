@page "/auth-test"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject ILogger<AuthTest> Logger

<h3>认证状态测试</h3>

<div class="card">
    <div class="card-header">
        认证状态信息
    </div>
    <div class="card-body">
        <AuthorizeView>
            <Authorized>
                <div class="alert alert-success">
                    <strong>已认证!</strong> 欢迎, @context.User.Identity?.Name!
                </div>
                <h4>用户声明:</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>类型</th>
                            <th>值</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in context.User.Claims)
                        {
                            <tr>
                                <td>@claim.Type</td>
                                <td>@claim.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </Authorized>
            <NotAuthorized>
                <div class="alert alert-warning">
                    <strong>未认证!</strong> 您当前未登录.
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

<div class="mt-3">
    <button class="btn btn-primary" @onclick="RefreshAuthState">刷新认证状态</button>
    <a href="/login" class="btn btn-outline-primary">前往登录页</a>
</div>

@code {
    private async Task RefreshAuthState()
    {
        try
        {
            Logger.LogInformation("正在刷新认证状态...");
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
            Logger.LogInformation("认证状态: {IsAuthenticated}", isAuthenticated);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "刷新认证状态时发生错误");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await RefreshAuthState();
    }
} 